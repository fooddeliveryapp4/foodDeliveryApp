package com.nv.foodapp.service.bill;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityNotFoundException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.nv.foodapp.entity.Bill;
import com.nv.foodapp.entity.Item;
import com.nv.foodapp.entity.Restaurant;
import com.nv.foodapp.exception.InvalidInputDataException;
import com.nv.foodapp.repository.bill.IBillRepository;
import com.nv.foodapp.repository.restaurant.IRestaurantRepository;
@Service
public class BillServiceImpl implements IBillService {

	@Autowired
	IBillRepository billRepository;

	@Autowired
	IRestaurantRepository restaurantRepository;

	@Override
	public Bill addBill(Bill bill) {
		// TODO Auto-generated method stub

		return billRepository.save(bill);
	}

	@Override
	public Bill updateRestaurantByBill(int restaurantid, int billid)throws Exception {
		// TODO Auto-generated method stub
		Bill billFromDB = viewItemById(itemid);

		Restaurant restaurantFromDB = restaurantRepository.getReferenceById(restaurantid);

		if (itemFromDB != null & restaurantFromDB != null) {
			List<Item> allItems = restaurantFromDB.getItem();

			if (allItems != null && allItems.isEmpty() == false) {
				allItems.add(itemFromDB);
				restaurantFromDB.setItem(allItems);
			} else {
				List<Item> newItemList = new ArrayList<>();
				newItemList.add(itemFromDB);
				restaurantFromDB.setItem(newItemList);
				;
			}
			// call repository save method
			restaurantRepository.saveAndFlush(restaurantFromDB);
			itemrepository.save(itemFromDB);
			return itemFromDB;
		} else {

			throw new NullPointerException(
					"Either Item " + itemFromDB + "or Restaurant " + restaurantFromDB + " is Null ");
		}

	}
	

	@Override
	public boolean removeBill(int billId) {
		// TODO Auto-generated method stub
		billRepository.deleteById(billId);
		return true;
	}

	@Override
	public Bill viewBillById(int id)throws Exception {
		// TODO Auto-generated method stub
		if (id >= 1) {
			Bill savedBill = billRepository.getReferenceById(id);
			if (savedBill != null)
				return savedBill;
			else {
				throw new EntityNotFoundException("Invalid Bill ID : " + id);
			}
		}
		return null;
	}

	@Override
	public List<Bill> viewAllBills() {
		// TODO Auto-generated method stub
		return billRepository.findAll();
	}

}
