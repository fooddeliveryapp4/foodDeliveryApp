package com.nv.foodapp.service.restaurant;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityNotFoundException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.nv.foodapp.entity.Bill;
import com.nv.foodapp.entity.Item;
import com.nv.foodapp.entity.Restaurant;
import com.nv.foodapp.exception.InvalidInputDataException;
import com.nv.foodapp.repository.bill.IBillRepository;
import com.nv.foodapp.repository.item.ItemRepository;
import com.nv.foodapp.repository.restaurant.IRestaurantRepository;

@Service
public class RestaurantServiceImpl implements IRestaurantService {

	@Autowired
	IRestaurantRepository restaurantRepository;
	
	@Autowired
	IBillRepository billRepository;

	@Override
	public Restaurant addRestaurant(Restaurant res) throws Exception {
		// TODO Auto-generated method stub
		if (res != null) {
			if (res.getRestaurantName().equals("")) {
				throw new InvalidInputDataException("restuarant name", "restuarant name is null");
			}
			Restaurant savedRestaurant = restaurantRepository.save(res);
			return savedRestaurant;
		} else
			throw new NullPointerException("restaurant is null");

	}

	@Override
	public Restaurant viewRestaurantById(int id) {
		// TODO Auto-generated method stub
		if (id >= 1) {
			Restaurant savedRestaurant = restaurantRepository.getReferenceById(id);
			if (savedRestaurant != null)
				return savedRestaurant;
			else {
				throw new EntityNotFoundException("Invalid Restaurant ID : " + id);
			}
		}
		return null;

	}
	@Override
	public List<Restaurant> viewAllRestaurants() {
		// TODO Auto-generated method stub
		return restaurantRepository.findAll();
	}
	@Override
	public boolean removeRestaurant(int restaurantId) {
		// TODO Auto-generated method stub
		// TODO Auto-generated method stub
		restaurantRepository.deleteById(restaurantId);
		return true;

	}

	@Override
	public Restaurant updateRestaurantByBill(int billId, int restaurantId)throws Exception {
		// TODO Auto-generated method stub

		Restaurant restaurantFromDB = viewRestaurantById(restaurantId);
		
		// 2. get course 
		Bill billFromDB = billRepository.getReferenceById(billId);
		
		// if student & course both are valid and available in DB then 
		if(studentFromDB != null & courseFromDB != null)
		{
			List<Student> allStudents = courseFromDB.getStudents();
			
			if(allStudents != null && allStudents.isEmpty() == false)
			{
				allStudents.add(studentFromDB);
				courseFromDB.setStudents(allStudents);
			}
			else // if course are null  then create ArrayList and add Student
			{
				List<Student> newStudentList = new ArrayList<>();
				newStudentList.add(studentFromDB);
				courseFromDB.setStudents(newStudentList);
			}
			// call repository save method
			courseRepository.saveAndFlush(courseFromDB);
			studentRepository.save(studentFromDB);
			return studentFromDB;
		}
		else
		{
			// if student or course not in the db
			throw new NullPointerException("Either Student "+studentFromDB+"or Course "+courseFromDB+" is Null ");
		}


}
